version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: task_management_db
    environment:
      POSTGRES_DB: task_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - task_management_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task_management_backend
    environment:
      NODE_ENV: development
      PORT: 5000
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/task_management
      UPLOAD_PATH: ./uploads
    ports:
      - "5000:5000"
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - task_management_network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task_management_frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - task_management_network
    command: npm start

volumes:
  postgres_data:

networks:
  task_management_network:
    driver: bridge
